version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mstore-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_PORT_HOST}:${POSTGRES_PORT}'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-logs:/var/log/postgresql
    networks:
      - mstore

  backend:
    container_name: mstore-backend
    build:
      context: ./backend
      dockerfile: Dockerfile.app
    environment:
      MEDUSA_BASE_URL: ${MEDIA_URL}
    networks:
      - mstore
    ports:
      - '${API_PORT_HOST}:${API_PORT}'

  frontend:
    container_name: mstore-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.app
      args:
        NEXT_PUBLIC_MEDIA_URL: ${MEDIA_URL}
    environment:
      NEXT_PUBLIC_API_HOST: ${BACKEND_URL}
      NEXT_PUBLIC_MEDIA_URL: ${MEDIA_URL}
    networks:
      - mstore
    ports:
      - '${FRONTEND_PORT_HOST}:${FRONTEND_PORT}'   

  medusajs:
    container_name: mstore-medusajs
    build:
      context: ./medusa
      dockerfile: Dockerfile.app 
    environment:
      NODE_ENV: production
      DATABASE_URL: ${MEDUSA_DATABASE_URL}
    networks:
      - mstore  
    ports:
      - '${MEDUSA_BACKAND_PORT}:${MEDUSA_BACKAND_PORT}'
    depends_on:
      - postgres
      
networks:
  mstore:
    driver: bridge

volumes:
  postgres-data:
  postgres-logs:
